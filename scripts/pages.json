[{"name":"Horizontal","description":"io.github.staakk.cchart.grid.GridOrientation.Horizontal","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-horizontal/index.html","searchKeys":["Horizontal","Horizontal","io.github.staakk.cchart.grid.GridOrientation.Horizontal"]},{"name":"Vertical","description":"io.github.staakk.cchart.grid.GridOrientation.Vertical","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-vertical/index.html","searchKeys":["Vertical","Vertical","io.github.staakk.cchart.grid.GridOrientation.Vertical"]},{"name":"abstract fun DrawScope.transformToRendererSpace(context: ChartContext, offset: Float, locationPercent: Float): Offset","description":"io.github.staakk.cchart.label.LabelOrientation.transformToRendererSpace","location":"cchart/io.github.staakk.cchart.label/-label-orientation/transform-to-renderer-space.html","searchKeys":["transformToRendererSpace","abstract fun DrawScope.transformToRendererSpace(context: ChartContext, offset: Float, locationPercent: Float): Offset","io.github.staakk.cchart.label.LabelOrientation.transformToRendererSpace"]},{"name":"abstract fun RendererScope.draw()","description":"io.github.staakk.cchart.renderer.Renderer.draw","location":"cchart/io.github.staakk.cchart.renderer/-renderer/draw.html","searchKeys":["draw","abstract fun RendererScope.draw()","io.github.staakk.cchart.renderer.Renderer.draw"]},{"name":"abstract fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","description":"io.github.staakk.cchart.renderer.PointsRenderer.draw","location":"cchart/io.github.staakk.cchart.renderer/-points-renderer/draw.html","searchKeys":["draw","abstract fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","io.github.staakk.cchart.renderer.PointsRenderer.draw"]},{"name":"abstract fun anchor(point: Point<*>, content: AnchorScope.() -> Unit)","description":"io.github.staakk.cchart.ChartScope.anchor","location":"cchart/io.github.staakk.cchart/-chart-scope/anchor.html","searchKeys":["anchor","abstract fun anchor(point: Point<*>, content: AnchorScope.() -> Unit)","io.github.staakk.cchart.ChartScope.anchor"]},{"name":"abstract fun contains(offset: Offset): Boolean","description":"io.github.staakk.cchart.bounds.Bounds.contains","location":"cchart/io.github.staakk.cchart.bounds/-bounds/contains.html","searchKeys":["contains","abstract fun contains(offset: Offset): Boolean","io.github.staakk.cchart.bounds.Bounds.contains"]},{"name":"abstract fun dataLabels(content: AnchorScope.() -> Unit)","description":"io.github.staakk.cchart.ChartScope.dataLabels","location":"cchart/io.github.staakk.cchart/-chart-scope/data-labels.html","searchKeys":["dataLabels","abstract fun dataLabels(content: AnchorScope.() -> Unit)","io.github.staakk.cchart.ChartScope.dataLabels"]},{"name":"abstract fun feature(renderer: Renderer)","description":"io.github.staakk.cchart.ChartScope.feature","location":"cchart/io.github.staakk.cchart/-chart-scope/feature.html","searchKeys":["feature","abstract fun feature(renderer: Renderer)","io.github.staakk.cchart.ChartScope.feature"]},{"name":"abstract fun getClipExtension(textMeasurer: TextMeasurer, labelOffset: Offset, style: TextStyle): Size","description":"io.github.staakk.cchart.label.LabelOrientation.getClipExtension","location":"cchart/io.github.staakk.cchart.label/-label-orientation/get-clip-extension.html","searchKeys":["getClipExtension","abstract fun getClipExtension(textMeasurer: TextMeasurer, labelOffset: Offset, style: TextStyle): Size","io.github.staakk.cchart.label.LabelOrientation.getClipExtension"]},{"name":"abstract fun getEnd(drawScope: DrawScope, context: ChartContext, value: Float): Offset","description":"io.github.staakk.cchart.grid.GridOrientation.getEnd","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/get-end.html","searchKeys":["getEnd","abstract fun getEnd(drawScope: DrawScope, context: ChartContext, value: Float): Offset","io.github.staakk.cchart.grid.GridOrientation.getEnd"]},{"name":"abstract fun getMax(bounds: Viewport): Float","description":"io.github.staakk.cchart.grid.GridOrientation.getMax","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/get-max.html","searchKeys":["getMax","abstract fun getMax(bounds: Viewport): Float","io.github.staakk.cchart.grid.GridOrientation.getMax"]},{"name":"abstract fun getMin(bounds: Viewport): Float","description":"io.github.staakk.cchart.grid.GridOrientation.getMin","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/get-min.html","searchKeys":["getMin","abstract fun getMin(bounds: Viewport): Float","io.github.staakk.cchart.grid.GridOrientation.getMin"]},{"name":"abstract fun getRange(viewport: Viewport): ClosedFloatingPointRange<Float>","description":"io.github.staakk.cchart.label.LabelOrientation.getRange","location":"cchart/io.github.staakk.cchart.label/-label-orientation/get-range.html","searchKeys":["getRange","abstract fun getRange(viewport: Viewport): ClosedFloatingPointRange<Float>","io.github.staakk.cchart.label.LabelOrientation.getRange"]},{"name":"abstract fun getStart(drawScope: DrawScope, context: ChartContext, value: Float): Offset","description":"io.github.staakk.cchart.grid.GridOrientation.getStart","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/get-start.html","searchKeys":["getStart","abstract fun getStart(drawScope: DrawScope, context: ChartContext, value: Float): Offset","io.github.staakk.cchart.grid.GridOrientation.getStart"]},{"name":"abstract fun provide(min: Float, max: Float): List<Float>","description":"io.github.staakk.cchart.grid.GridProvider.provide","location":"cchart/io.github.staakk.cchart.grid/-grid-provider/provide.html","searchKeys":["provide","abstract fun provide(min: Float, max: Float): List<Float>","io.github.staakk.cchart.grid.GridProvider.provide"]},{"name":"abstract fun provide(min: Float, max: Float): List<Pair<String, Float>>","description":"io.github.staakk.cchart.label.LabelsProvider.provide","location":"cchart/io.github.staakk.cchart.label/-labels-provider/provide.html","searchKeys":["provide","abstract fun provide(min: Float, max: Float): List<Pair<String, Float>>","io.github.staakk.cchart.label.LabelsProvider.provide"]},{"name":"abstract fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","description":"io.github.staakk.cchart.bounds.BoundsProvider.provide","location":"cchart/io.github.staakk.cchart.bounds/-bounds-provider/provide.html","searchKeys":["provide","abstract fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","io.github.staakk.cchart.bounds.BoundsProvider.provide"]},{"name":"abstract fun series(series: Series, drawer: PointsRenderer, boundsProvider: BoundsProvider = NoBounds)","description":"io.github.staakk.cchart.ChartScope.series","location":"cchart/io.github.staakk.cchart/-chart-scope/series.html","searchKeys":["series","abstract fun series(series: Series, drawer: PointsRenderer, boundsProvider: BoundsProvider = NoBounds)","io.github.staakk.cchart.ChartScope.series"]},{"name":"abstract operator fun invoke(indexInGroup: Int, rendererPoint: RendererPoint<*>): PrimitiveStyle","description":"io.github.staakk.cchart.bar.StyleProvider.invoke","location":"cchart/io.github.staakk.cchart.bar/-style-provider/invoke.html","searchKeys":["invoke","abstract operator fun invoke(indexInGroup: Int, rendererPoint: RendererPoint<*>): PrimitiveStyle","io.github.staakk.cchart.bar.StyleProvider.invoke"]},{"name":"abstract val labelAnchorX: Float","description":"io.github.staakk.cchart.bounds.Bounds.labelAnchorX","location":"cchart/io.github.staakk.cchart.bounds/-bounds/label-anchor-x.html","searchKeys":["labelAnchorX","abstract val labelAnchorX: Float","io.github.staakk.cchart.bounds.Bounds.labelAnchorX"]},{"name":"abstract val labelAnchorY: Float","description":"io.github.staakk.cchart.bounds.Bounds.labelAnchorY","location":"cchart/io.github.staakk.cchart.bounds/-bounds/label-anchor-y.html","searchKeys":["labelAnchorY","abstract val labelAnchorY: Float","io.github.staakk.cchart.bounds.Bounds.labelAnchorY"]},{"name":"abstract val point: Point<*>","description":"io.github.staakk.cchart.bounds.Bounds.point","location":"cchart/io.github.staakk.cchart.bounds/-bounds/point.html","searchKeys":["point","abstract val point: Point<*>","io.github.staakk.cchart.bounds.Bounds.point"]},{"name":"class Axis(orientation: AxisOrientation, positionPercent: Float, style: LineStyle = LineStyle()) : Renderer","description":"io.github.staakk.cchart.axis.Axis","location":"cchart/io.github.staakk.cchart.axis/-axis/index.html","searchKeys":["Axis","class Axis(orientation: AxisOrientation, positionPercent: Float, style: LineStyle = LineStyle()) : Renderer","io.github.staakk.cchart.axis.Axis"]},{"name":"class BarProcessor(preferredWidth: Float, minimalSpacing: Float = 10.0f, style: StyleProvider = StyleProvider { _, _ -> PrimitiveStyle() }, sizeTransform: (Size) -> Size = { it }) : PointsRenderer, BoundsProvider","description":"io.github.staakk.cchart.bar.BarProcessor","location":"cchart/io.github.staakk.cchart.bar/-bar-processor/index.html","searchKeys":["BarProcessor","class BarProcessor(preferredWidth: Float, minimalSpacing: Float = 10.0f, style: StyleProvider = StyleProvider { _, _ -> PrimitiveStyle() }, sizeTransform: (Size) -> Size = { it }) : PointsRenderer, BoundsProvider","io.github.staakk.cchart.bar.BarProcessor"]},{"name":"class ChartState(viewport: Viewport)","description":"io.github.staakk.cchart.ChartState","location":"cchart/io.github.staakk.cchart/-chart-state/index.html","searchKeys":["ChartState","class ChartState(viewport: Viewport)","io.github.staakk.cchart.ChartState"]},{"name":"class DrawLine(style: LineStyle = LineStyle()) : PointsRenderer","description":"io.github.staakk.cchart.line.DrawLine","location":"cchart/io.github.staakk.cchart.line/-draw-line/index.html","searchKeys":["DrawLine","class DrawLine(style: LineStyle = LineStyle()) : PointsRenderer","io.github.staakk.cchart.line.DrawLine"]},{"name":"class DrawPoints(pointSize: Size = Size(30f, 30f), style: PrimitiveStyle = PrimitiveStyle()) : PointsRenderer","description":"io.github.staakk.cchart.point.DrawPoints","location":"cchart/io.github.staakk.cchart.point/-draw-points/index.html","searchKeys":["DrawPoints","class DrawPoints(pointSize: Size = Size(30f, 30f), style: PrimitiveStyle = PrimitiveStyle()) : PointsRenderer","io.github.staakk.cchart.point.DrawPoints"]},{"name":"class Grid(orientation: GridOrientation, gridLinesProvider: GridProvider = GridLinesProviders.intGrid, lineStyle: LineStyle = LineStyle()) : Renderer","description":"io.github.staakk.cchart.grid.Grid","location":"cchart/io.github.staakk.cchart.grid/-grid/index.html","searchKeys":["Grid","class Grid(orientation: GridOrientation, gridLinesProvider: GridProvider = GridLinesProviders.intGrid, lineStyle: LineStyle = LineStyle()) : Renderer","io.github.staakk.cchart.grid.Grid"]},{"name":"class Labels(textMeasurer: TextMeasurer, orientation: LabelOrientation, locationPercent: Float, labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider) : Renderer","description":"io.github.staakk.cchart.label.Labels","location":"cchart/io.github.staakk.cchart.label/-labels/index.html","searchKeys":["Labels","class Labels(textMeasurer: TextMeasurer, orientation: LabelOrientation, locationPercent: Float, labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider) : Renderer","io.github.staakk.cchart.label.Labels"]},{"name":"class LineBoundsProvider(radius: Float = 20.0f) : BoundsProvider","description":"io.github.staakk.cchart.line.LineBoundsProvider","location":"cchart/io.github.staakk.cchart.line/-line-bounds-provider/index.html","searchKeys":["LineBoundsProvider","class LineBoundsProvider(radius: Float = 20.0f) : BoundsProvider","io.github.staakk.cchart.line.LineBoundsProvider"]},{"name":"class PointBoundsProvider(size: Size) : BoundsProvider","description":"io.github.staakk.cchart.point.PointBoundsProvider","location":"cchart/io.github.staakk.cchart.point/-point-bounds-provider/index.html","searchKeys":["PointBoundsProvider","class PointBoundsProvider(size: Size) : BoundsProvider","io.github.staakk.cchart.point.PointBoundsProvider"]},{"name":"class RendererScope(drawScope: DrawScope, val chartContext: ChartContext) : DrawScope","description":"io.github.staakk.cchart.renderer.RendererScope","location":"cchart/io.github.staakk.cchart.renderer/-renderer-scope/index.html","searchKeys":["RendererScope","class RendererScope(drawScope: DrawScope, val chartContext: ChartContext) : DrawScope","io.github.staakk.cchart.renderer.RendererScope"]},{"name":"class Series(data: List<Point<*>>) : List<Point<*>> ","description":"io.github.staakk.cchart.data.Series","location":"cchart/io.github.staakk.cchart.data/-series/index.html","searchKeys":["Series","class Series(data: List<Point<*>>) : List<Point<*>> ","io.github.staakk.cchart.data.Series"]},{"name":"constructor(alpha: Float = 1.0f, brush: Brush = SolidColor(Color.Black), strokeWidth: Float = Stroke.HairlineWidth, pathEffect: PathEffect? = null, cap: StrokeCap = Stroke.DefaultCap, colorFilter: ColorFilter? = null, blendMode: BlendMode = DrawScope.DefaultBlendMode)","description":"io.github.staakk.cchart.style.LineStyle.LineStyle","location":"cchart/io.github.staakk.cchart.style/-line-style/-line-style.html","searchKeys":["LineStyle","constructor(alpha: Float = 1.0f, brush: Brush = SolidColor(Color.Black), strokeWidth: Float = Stroke.HairlineWidth, pathEffect: PathEffect? = null, cap: StrokeCap = Stroke.DefaultCap, colorFilter: ColorFilter? = null, blendMode: BlendMode = DrawScope.DefaultBlendMode)","io.github.staakk.cchart.style.LineStyle.LineStyle"]},{"name":"constructor(alpha: Float = 1.0f, brush: Brush = SolidColor(Color.Black), style: DrawStyle = Fill, colorFilter: ColorFilter? = null, blendMode: BlendMode = DrawScope.DefaultBlendMode)","description":"io.github.staakk.cchart.style.PrimitiveStyle.PrimitiveStyle","location":"cchart/io.github.staakk.cchart.style/-primitive-style/-primitive-style.html","searchKeys":["PrimitiveStyle","constructor(alpha: Float = 1.0f, brush: Brush = SolidColor(Color.Black), style: DrawStyle = Fill, colorFilter: ColorFilter? = null, blendMode: BlendMode = DrawScope.DefaultBlendMode)","io.github.staakk.cchart.style.PrimitiveStyle.PrimitiveStyle"]},{"name":"constructor(brush: Brush = SolidColor(Color.Black), textStyle: TextStyle = TextStyle.Default.copy(fontSize = 12.sp), alignment: Alignment = Alignment.TopCenter, labelOffset: Offset = Offset(0f, 12f), clip: Boolean = false)","description":"io.github.staakk.cchart.style.LabelStyle.LabelStyle","location":"cchart/io.github.staakk.cchart.style/-label-style/-label-style.html","searchKeys":["LabelStyle","constructor(brush: Brush = SolidColor(Color.Black), textStyle: TextStyle = TextStyle.Default.copy(fontSize = 12.sp), alignment: Alignment = Alignment.TopCenter, labelOffset: Offset = Offset(0f, 12f), clip: Boolean = false)","io.github.staakk.cchart.style.LabelStyle.LabelStyle"]},{"name":"constructor(canvasSize: Size, scaleX: Float, scaleY: Float, viewport: Viewport)","description":"io.github.staakk.cchart.ChartContext.ChartContext","location":"cchart/io.github.staakk.cchart/-chart-context/-chart-context.html","searchKeys":["ChartContext","constructor(canvasSize: Size, scaleX: Float, scaleY: Float, viewport: Viewport)","io.github.staakk.cchart.ChartContext.ChartContext"]},{"name":"constructor(data: List<Point<*>>)","description":"io.github.staakk.cchart.data.Series.Series","location":"cchart/io.github.staakk.cchart.data/-series/-series.html","searchKeys":["Series","constructor(data: List<Point<*>>)","io.github.staakk.cchart.data.Series.Series"]},{"name":"constructor(drawScope: DrawScope, chartContext: ChartContext)","description":"io.github.staakk.cchart.renderer.RendererScope.RendererScope","location":"cchart/io.github.staakk.cchart.renderer/-renderer-scope/-renderer-scope.html","searchKeys":["RendererScope","constructor(drawScope: DrawScope, chartContext: ChartContext)","io.github.staakk.cchart.renderer.RendererScope.RendererScope"]},{"name":"constructor(minX: Float, maxX: Float, minY: Float, maxY: Float)","description":"io.github.staakk.cchart.data.Viewport.Viewport","location":"cchart/io.github.staakk.cchart.data/-viewport/-viewport.html","searchKeys":["Viewport","constructor(minX: Float, maxX: Float, minY: Float, maxY: Float)","io.github.staakk.cchart.data.Viewport.Viewport"]},{"name":"constructor(minX: Number, maxX: Number, minY: Number, maxY: Number)","description":"io.github.staakk.cchart.data.Viewport.Viewport","location":"cchart/io.github.staakk.cchart.data/-viewport/-viewport.html","searchKeys":["Viewport","constructor(minX: Number, maxX: Number, minY: Number, maxY: Number)","io.github.staakk.cchart.data.Viewport.Viewport"]},{"name":"constructor(orientation: AxisOrientation, positionPercent: Float, style: LineStyle = LineStyle())","description":"io.github.staakk.cchart.axis.Axis.Axis","location":"cchart/io.github.staakk.cchart.axis/-axis/-axis.html","searchKeys":["Axis","constructor(orientation: AxisOrientation, positionPercent: Float, style: LineStyle = LineStyle())","io.github.staakk.cchart.axis.Axis.Axis"]},{"name":"constructor(orientation: GridOrientation, gridLinesProvider: GridProvider = GridLinesProviders.intGrid, lineStyle: LineStyle = LineStyle())","description":"io.github.staakk.cchart.grid.Grid.Grid","location":"cchart/io.github.staakk.cchart.grid/-grid/-grid.html","searchKeys":["Grid","constructor(orientation: GridOrientation, gridLinesProvider: GridProvider = GridLinesProviders.intGrid, lineStyle: LineStyle = LineStyle())","io.github.staakk.cchart.grid.Grid.Grid"]},{"name":"constructor(point: Point<*>, labelAnchorX: Float, labelAnchorY: Float, center: Offset, radius: Float)","description":"io.github.staakk.cchart.bounds.Bounds.Circle.Circle","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/-circle.html","searchKeys":["Circle","constructor(point: Point<*>, labelAnchorX: Float, labelAnchorY: Float, center: Offset, radius: Float)","io.github.staakk.cchart.bounds.Bounds.Circle.Circle"]},{"name":"constructor(point: Point<*>, labelAnchorX: Float, labelAnchorY: Float, topLeft: Offset, bottomRight: Offset)","description":"io.github.staakk.cchart.bounds.Bounds.Rect.Rect","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/-rect.html","searchKeys":["Rect","constructor(point: Point<*>, labelAnchorX: Float, labelAnchorY: Float, topLeft: Offset, bottomRight: Offset)","io.github.staakk.cchart.bounds.Bounds.Rect.Rect"]},{"name":"constructor(point: Point<*>, offset: Offset, canvasSize: Size, density: Density)","description":"io.github.staakk.cchart.AnchorScope.AnchorScope","location":"cchart/io.github.staakk.cchart/-anchor-scope/-anchor-scope.html","searchKeys":["AnchorScope","constructor(point: Point<*>, offset: Offset, canvasSize: Size, density: Density)","io.github.staakk.cchart.AnchorScope.AnchorScope"]},{"name":"constructor(point: Point<T>, x: Float, y: Float)","description":"io.github.staakk.cchart.renderer.RendererPoint.RendererPoint","location":"cchart/io.github.staakk.cchart.renderer/-renderer-point/-renderer-point.html","searchKeys":["RendererPoint","constructor(point: Point<T>, x: Float, y: Float)","io.github.staakk.cchart.renderer.RendererPoint.RendererPoint"]},{"name":"constructor(pointSize: Size = Size(30f, 30f), style: PrimitiveStyle = PrimitiveStyle())","description":"io.github.staakk.cchart.point.DrawPoints.DrawPoints","location":"cchart/io.github.staakk.cchart.point/-draw-points/-draw-points.html","searchKeys":["DrawPoints","constructor(pointSize: Size = Size(30f, 30f), style: PrimitiveStyle = PrimitiveStyle())","io.github.staakk.cchart.point.DrawPoints.DrawPoints"]},{"name":"constructor(preferredWidth: Float, minimalSpacing: Float = 10.0f, style: StyleProvider = StyleProvider { _, _ -> PrimitiveStyle() }, sizeTransform: (Size) -> Size = { it })","description":"io.github.staakk.cchart.bar.BarProcessor.BarProcessor","location":"cchart/io.github.staakk.cchart.bar/-bar-processor/-bar-processor.html","searchKeys":["BarProcessor","constructor(preferredWidth: Float, minimalSpacing: Float = 10.0f, style: StyleProvider = StyleProvider { _, _ -> PrimitiveStyle() }, sizeTransform: (Size) -> Size = { it })","io.github.staakk.cchart.bar.BarProcessor.BarProcessor"]},{"name":"constructor(radius: Float = 20.0f)","description":"io.github.staakk.cchart.line.LineBoundsProvider.LineBoundsProvider","location":"cchart/io.github.staakk.cchart.line/-line-bounds-provider/-line-bounds-provider.html","searchKeys":["LineBoundsProvider","constructor(radius: Float = 20.0f)","io.github.staakk.cchart.line.LineBoundsProvider.LineBoundsProvider"]},{"name":"constructor(size: Size)","description":"io.github.staakk.cchart.point.PointBoundsProvider.PointBoundsProvider","location":"cchart/io.github.staakk.cchart.point/-point-bounds-provider/-point-bounds-provider.html","searchKeys":["PointBoundsProvider","constructor(size: Size)","io.github.staakk.cchart.point.PointBoundsProvider.PointBoundsProvider"]},{"name":"constructor(style: LineStyle = LineStyle())","description":"io.github.staakk.cchart.line.DrawLine.DrawLine","location":"cchart/io.github.staakk.cchart.line/-draw-line/-draw-line.html","searchKeys":["DrawLine","constructor(style: LineStyle = LineStyle())","io.github.staakk.cchart.line.DrawLine.DrawLine"]},{"name":"constructor(textMeasurer: TextMeasurer, orientation: LabelOrientation, locationPercent: Float, labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider)","description":"io.github.staakk.cchart.label.Labels.Labels","location":"cchart/io.github.staakk.cchart.label/-labels/-labels.html","searchKeys":["Labels","constructor(textMeasurer: TextMeasurer, orientation: LabelOrientation, locationPercent: Float, labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider)","io.github.staakk.cchart.label.Labels.Labels"]},{"name":"constructor(viewport: Viewport)","description":"io.github.staakk.cchart.ChartState.ChartState","location":"cchart/io.github.staakk.cchart/-chart-state/-chart-state.html","searchKeys":["ChartState","constructor(viewport: Viewport)","io.github.staakk.cchart.ChartState.ChartState"]},{"name":"constructor(x: Float, y: Float)","description":"io.github.staakk.cchart.axis.AxisOrientation.AxisOrientation","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/-axis-orientation.html","searchKeys":["AxisOrientation","constructor(x: Float, y: Float)","io.github.staakk.cchart.axis.AxisOrientation.AxisOrientation"]},{"name":"constructor(x: Float, y: Float, isInRendererSpace: Boolean, data: T)","description":"io.github.staakk.cchart.data.Point.Point","location":"cchart/io.github.staakk.cchart.data/-point/-point.html","searchKeys":["Point","constructor(x: Float, y: Float, isInRendererSpace: Boolean, data: T)","io.github.staakk.cchart.data.Point.Point"]},{"name":"data class AnchorScope(val point: Point<*>, val offset: Offset, val canvasSize: Size, val density: Density)","description":"io.github.staakk.cchart.AnchorScope","location":"cchart/io.github.staakk.cchart/-anchor-scope/index.html","searchKeys":["AnchorScope","data class AnchorScope(val point: Point<*>, val offset: Offset, val canvasSize: Size, val density: Density)","io.github.staakk.cchart.AnchorScope"]},{"name":"data class AxisOrientation(val x: Float, val y: Float)","description":"io.github.staakk.cchart.axis.AxisOrientation","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/index.html","searchKeys":["AxisOrientation","data class AxisOrientation(val x: Float, val y: Float)","io.github.staakk.cchart.axis.AxisOrientation"]},{"name":"data class ChartContext(val canvasSize: Size, val scaleX: Float, val scaleY: Float, val viewport: Viewport)","description":"io.github.staakk.cchart.ChartContext","location":"cchart/io.github.staakk.cchart/-chart-context/index.html","searchKeys":["ChartContext","data class ChartContext(val canvasSize: Size, val scaleX: Float, val scaleY: Float, val viewport: Viewport)","io.github.staakk.cchart.ChartContext"]},{"name":"data class Circle(val point: Point<*>, val labelAnchorX: Float, val labelAnchorY: Float, val center: Offset, val radius: Float) : Bounds","description":"io.github.staakk.cchart.bounds.Bounds.Circle","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/index.html","searchKeys":["Circle","data class Circle(val point: Point<*>, val labelAnchorX: Float, val labelAnchorY: Float, val center: Offset, val radius: Float) : Bounds","io.github.staakk.cchart.bounds.Bounds.Circle"]},{"name":"data class LabelStyle(val brush: Brush = SolidColor(Color.Black), val textStyle: TextStyle = TextStyle.Default.copy(fontSize = 12.sp), val alignment: Alignment = Alignment.TopCenter, val labelOffset: Offset = Offset(0f, 12f), val clip: Boolean = false)","description":"io.github.staakk.cchart.style.LabelStyle","location":"cchart/io.github.staakk.cchart.style/-label-style/index.html","searchKeys":["LabelStyle","data class LabelStyle(val brush: Brush = SolidColor(Color.Black), val textStyle: TextStyle = TextStyle.Default.copy(fontSize = 12.sp), val alignment: Alignment = Alignment.TopCenter, val labelOffset: Offset = Offset(0f, 12f), val clip: Boolean = false)","io.github.staakk.cchart.style.LabelStyle"]},{"name":"data class LineStyle(val alpha: Float = 1.0f, val brush: Brush = SolidColor(Color.Black), val strokeWidth: Float = Stroke.HairlineWidth, val pathEffect: PathEffect? = null, val cap: StrokeCap = Stroke.DefaultCap, val colorFilter: ColorFilter? = null, val blendMode: BlendMode = DrawScope.DefaultBlendMode)","description":"io.github.staakk.cchart.style.LineStyle","location":"cchart/io.github.staakk.cchart.style/-line-style/index.html","searchKeys":["LineStyle","data class LineStyle(val alpha: Float = 1.0f, val brush: Brush = SolidColor(Color.Black), val strokeWidth: Float = Stroke.HairlineWidth, val pathEffect: PathEffect? = null, val cap: StrokeCap = Stroke.DefaultCap, val colorFilter: ColorFilter? = null, val blendMode: BlendMode = DrawScope.DefaultBlendMode)","io.github.staakk.cchart.style.LineStyle"]},{"name":"data class Point<out T>(val x: Float, val y: Float, val isInRendererSpace: Boolean, val data: T)","description":"io.github.staakk.cchart.data.Point","location":"cchart/io.github.staakk.cchart.data/-point/index.html","searchKeys":["Point","data class Point<out T>(val x: Float, val y: Float, val isInRendererSpace: Boolean, val data: T)","io.github.staakk.cchart.data.Point"]},{"name":"data class PrimitiveStyle(val alpha: Float = 1.0f, val brush: Brush = SolidColor(Color.Black), val style: DrawStyle = Fill, val colorFilter: ColorFilter? = null, val blendMode: BlendMode = DrawScope.DefaultBlendMode)","description":"io.github.staakk.cchart.style.PrimitiveStyle","location":"cchart/io.github.staakk.cchart.style/-primitive-style/index.html","searchKeys":["PrimitiveStyle","data class PrimitiveStyle(val alpha: Float = 1.0f, val brush: Brush = SolidColor(Color.Black), val style: DrawStyle = Fill, val colorFilter: ColorFilter? = null, val blendMode: BlendMode = DrawScope.DefaultBlendMode)","io.github.staakk.cchart.style.PrimitiveStyle"]},{"name":"data class Rect(val point: Point<*>, val labelAnchorX: Float, val labelAnchorY: Float, val topLeft: Offset, val bottomRight: Offset) : Bounds","description":"io.github.staakk.cchart.bounds.Bounds.Rect","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/index.html","searchKeys":["Rect","data class Rect(val point: Point<*>, val labelAnchorX: Float, val labelAnchorY: Float, val topLeft: Offset, val bottomRight: Offset) : Bounds","io.github.staakk.cchart.bounds.Bounds.Rect"]},{"name":"data class RendererPoint<out T>(val point: Point<T>, val x: Float, val y: Float)","description":"io.github.staakk.cchart.renderer.RendererPoint","location":"cchart/io.github.staakk.cchart.renderer/-renderer-point/index.html","searchKeys":["RendererPoint","data class RendererPoint<out T>(val point: Point<T>, val x: Float, val y: Float)","io.github.staakk.cchart.renderer.RendererPoint"]},{"name":"data class Viewport(val minX: Float, val maxX: Float, val minY: Float, val maxY: Float)","description":"io.github.staakk.cchart.data.Viewport","location":"cchart/io.github.staakk.cchart.data/-viewport/index.html","searchKeys":["Viewport","data class Viewport(val minX: Float, val maxX: Float, val minY: Float, val maxY: Float)","io.github.staakk.cchart.data.Viewport"]},{"name":"enum GridOrientation : Enum<GridOrientation> ","description":"io.github.staakk.cchart.grid.GridOrientation","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/index.html","searchKeys":["GridOrientation","enum GridOrientation : Enum<GridOrientation> ","io.github.staakk.cchart.grid.GridOrientation"]},{"name":"fun <T> Point<T>.toRendererPoint(chartContext: ChartContext): RendererPoint<T>","description":"io.github.staakk.cchart.renderer.toRendererPoint","location":"cchart/io.github.staakk.cchart.renderer/to-renderer-point.html","searchKeys":["toRendererPoint","fun <T> Point<T>.toRendererPoint(chartContext: ChartContext): RendererPoint<T>","io.github.staakk.cchart.renderer.toRendererPoint"]},{"name":"fun Chart(modifier: Modifier = Modifier, chartState: ChartState, maxViewport: Viewport = chartState.viewport, minViewportSize: Size = chartState.viewport.size, maxViewportSize: Size = chartState.viewport.size, enableZoom: Boolean = false, onClick: (Offset, Point<*>) -> Unit = { _, _ -> }, content: ChartScope.() -> Unit)","description":"io.github.staakk.cchart.Chart","location":"cchart/io.github.staakk.cchart/-chart.html","searchKeys":["Chart","fun Chart(modifier: Modifier = Modifier, chartState: ChartState, maxViewport: Viewport = chartState.viewport, minViewportSize: Size = chartState.viewport.size, maxViewportSize: Size = chartState.viewport.size, enableZoom: Boolean = false, onClick: (Offset, Point<*>) -> Unit = { _, _ -> }, content: ChartScope.() -> Unit)","io.github.staakk.cchart.Chart"]},{"name":"fun Chart(modifier: Modifier = Modifier, viewport: Viewport? = null, maxViewport: Viewport? = viewport, minViewportSize: Size? = viewport?.size, maxViewportSize: Size? = viewport?.size, enableZoom: Boolean = false, onClick: (Offset, Point<*>) -> Unit = { _, _ -> }, content: ChartScope.() -> Unit)","description":"io.github.staakk.cchart.Chart","location":"cchart/io.github.staakk.cchart/-chart.html","searchKeys":["Chart","fun Chart(modifier: Modifier = Modifier, viewport: Viewport? = null, maxViewport: Viewport? = viewport, minViewportSize: Size? = viewport?.size, maxViewportSize: Size? = viewport?.size, enableZoom: Boolean = false, onClick: (Offset, Point<*>) -> Unit = { _, _ -> }, content: ChartScope.() -> Unit)","io.github.staakk.cchart.Chart"]},{"name":"fun ChartScope.features(vararg renderers: Renderer)","description":"io.github.staakk.cchart.features","location":"cchart/io.github.staakk.cchart/features.html","searchKeys":["features","fun ChartScope.features(vararg renderers: Renderer)","io.github.staakk.cchart.features"]},{"name":"fun DrawScope.drawText(textMeasurer: TextMeasurer, text: String, style: TextStyle = TextStyle.Default, position: Offset = Offset.Zero, alignment: Alignment = Alignment.Center, brush: Brush = SolidColor(Color.Black))","description":"io.github.staakk.cchart.common.drawText","location":"cchart/io.github.staakk.cchart.common/draw-text.html","searchKeys":["drawText","fun DrawScope.drawText(textMeasurer: TextMeasurer, text: String, style: TextStyle = TextStyle.Default, position: Offset = Offset.Zero, alignment: Alignment = Alignment.Center, brush: Brush = SolidColor(Color.Black))","io.github.staakk.cchart.common.drawText"]},{"name":"fun Iterable<Series>.getViewport(): Viewport","description":"io.github.staakk.cchart.data.Viewport.Companion.getViewport","location":"cchart/io.github.staakk.cchart.data/-viewport/-companion/get-viewport.html","searchKeys":["getViewport","fun Iterable<Series>.getViewport(): Viewport","io.github.staakk.cchart.data.Viewport.Companion.getViewport"]},{"name":"fun Modifier.align(alignment: Alignment): Modifier","description":"io.github.staakk.cchart.AnchorScope.align","location":"cchart/io.github.staakk.cchart/-anchor-scope/align.html","searchKeys":["align","fun Modifier.align(alignment: Alignment): Modifier","io.github.staakk.cchart.AnchorScope.align"]},{"name":"fun applyPan(panX: Float, panY: Float, maxViewport: Viewport): Viewport","description":"io.github.staakk.cchart.data.Viewport.applyPan","location":"cchart/io.github.staakk.cchart.data/-viewport/apply-pan.html","searchKeys":["applyPan","fun applyPan(panX: Float, panY: Float, maxViewport: Viewport): Viewport","io.github.staakk.cchart.data.Viewport.applyPan"]},{"name":"fun applyZoom(zoom: Float, direction: Offset, minSize: Size, maxSize: Size): Viewport","description":"io.github.staakk.cchart.data.Viewport.applyZoom","location":"cchart/io.github.staakk.cchart.data/-viewport/apply-zoom.html","searchKeys":["applyZoom","fun applyZoom(zoom: Float, direction: Offset, minSize: Size, maxSize: Size): Viewport","io.github.staakk.cchart.data.Viewport.applyZoom"]},{"name":"fun chartContext(viewport: Viewport, canvasSize: Size): ChartContext","description":"io.github.staakk.cchart.chartContext","location":"cchart/io.github.staakk.cchart/chart-context.html","searchKeys":["chartContext","fun chartContext(viewport: Viewport, canvasSize: Size): ChartContext","io.github.staakk.cchart.chartContext"]},{"name":"fun contains(point: Point<*>): Boolean","description":"io.github.staakk.cchart.data.Viewport.contains","location":"cchart/io.github.staakk.cchart.data/-viewport/contains.html","searchKeys":["contains","fun contains(point: Point<*>): Boolean","io.github.staakk.cchart.data.Viewport.contains"]},{"name":"fun getDrawingBounds(chartContext: ChartContext, size: Size): Viewport","description":"io.github.staakk.cchart.ChartContext.getDrawingBounds","location":"cchart/io.github.staakk.cchart/-chart-context/get-drawing-bounds.html","searchKeys":["getDrawingBounds","fun getDrawingBounds(chartContext: ChartContext, size: Size): Viewport","io.github.staakk.cchart.ChartContext.getDrawingBounds"]},{"name":"fun horizontalLabels(locationPercent: Float = 0.0f, textMeasurer: TextMeasurer = rememberTextMeasurer(), labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider): Labels","description":"io.github.staakk.cchart.label.Labels.Companion.horizontalLabels","location":"cchart/io.github.staakk.cchart.label/-labels/-companion/horizontal-labels.html","searchKeys":["horizontalLabels","fun horizontalLabels(locationPercent: Float = 0.0f, textMeasurer: TextMeasurer = rememberTextMeasurer(), labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider): Labels","io.github.staakk.cchart.label.Labels.Companion.horizontalLabels"]},{"name":"fun interface BoundsProvider","description":"io.github.staakk.cchart.bounds.BoundsProvider","location":"cchart/io.github.staakk.cchart.bounds/-bounds-provider/index.html","searchKeys":["BoundsProvider","fun interface BoundsProvider","io.github.staakk.cchart.bounds.BoundsProvider"]},{"name":"fun interface GridProvider","description":"io.github.staakk.cchart.grid.GridProvider","location":"cchart/io.github.staakk.cchart.grid/-grid-provider/index.html","searchKeys":["GridProvider","fun interface GridProvider","io.github.staakk.cchart.grid.GridProvider"]},{"name":"fun interface LabelsProvider","description":"io.github.staakk.cchart.label.LabelsProvider","location":"cchart/io.github.staakk.cchart.label/-labels-provider/index.html","searchKeys":["LabelsProvider","fun interface LabelsProvider","io.github.staakk.cchart.label.LabelsProvider"]},{"name":"fun interface PointsRenderer","description":"io.github.staakk.cchart.renderer.PointsRenderer","location":"cchart/io.github.staakk.cchart.renderer/-points-renderer/index.html","searchKeys":["PointsRenderer","fun interface PointsRenderer","io.github.staakk.cchart.renderer.PointsRenderer"]},{"name":"fun interface StyleProvider","description":"io.github.staakk.cchart.bar.StyleProvider","location":"cchart/io.github.staakk.cchart.bar/-style-provider/index.html","searchKeys":["StyleProvider","fun interface StyleProvider","io.github.staakk.cchart.bar.StyleProvider"]},{"name":"fun labels(orientation: LabelOrientation, locationPercent: Float, textMeasurer: TextMeasurer = rememberTextMeasurer(), labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider): Labels","description":"io.github.staakk.cchart.label.Labels.Companion.labels","location":"cchart/io.github.staakk.cchart.label/-labels/-companion/labels.html","searchKeys":["labels","fun labels(orientation: LabelOrientation, locationPercent: Float, textMeasurer: TextMeasurer = rememberTextMeasurer(), labelStyle: LabelStyle = LabelStyle(), labelsProvider: LabelsProvider = IntLabelsProvider): Labels","io.github.staakk.cchart.label.Labels.Companion.labels"]},{"name":"fun multiple(value: Float): GridProvider","description":"io.github.staakk.cchart.grid.GridLinesProviders.multiple","location":"cchart/io.github.staakk.cchart.grid/-grid-lines-providers/multiple.html","searchKeys":["multiple","fun multiple(value: Float): GridProvider","io.github.staakk.cchart.grid.GridLinesProviders.multiple"]},{"name":"fun pointOf(x: Number, y: Number): Point<Nothing?>","description":"io.github.staakk.cchart.data.pointOf","location":"cchart/io.github.staakk.cchart.data/point-of.html","searchKeys":["pointOf","fun pointOf(x: Number, y: Number): Point<Nothing?>","io.github.staakk.cchart.data.pointOf"]},{"name":"fun seriesOf(vararg data: Pair<Number, Number>): Series","description":"io.github.staakk.cchart.data.seriesOf","location":"cchart/io.github.staakk.cchart.data/series-of.html","searchKeys":["seriesOf","fun seriesOf(vararg data: Pair<Number, Number>): Series","io.github.staakk.cchart.data.seriesOf"]},{"name":"fun seriesOf(vararg data: Point<*>): Series","description":"io.github.staakk.cchart.data.seriesOf","location":"cchart/io.github.staakk.cchart.data/series-of.html","searchKeys":["seriesOf","fun seriesOf(vararg data: Point<*>): Series","io.github.staakk.cchart.data.seriesOf"]},{"name":"fun toChartHeight(height: Float): Float","description":"io.github.staakk.cchart.ChartContext.toChartHeight","location":"cchart/io.github.staakk.cchart/-chart-context/to-chart-height.html","searchKeys":["toChartHeight","fun toChartHeight(height: Float): Float","io.github.staakk.cchart.ChartContext.toChartHeight"]},{"name":"fun toChartWidth(width: Float): Float","description":"io.github.staakk.cchart.ChartContext.toChartWidth","location":"cchart/io.github.staakk.cchart/-chart-context/to-chart-width.html","searchKeys":["toChartWidth","fun toChartWidth(width: Float): Float","io.github.staakk.cchart.ChartContext.toChartWidth"]},{"name":"fun toChartX(x: Float): Float","description":"io.github.staakk.cchart.ChartContext.toChartX","location":"cchart/io.github.staakk.cchart/-chart-context/to-chart-x.html","searchKeys":["toChartX","fun toChartX(x: Float): Float","io.github.staakk.cchart.ChartContext.toChartX"]},{"name":"fun toChartY(y: Float): Float","description":"io.github.staakk.cchart.ChartContext.toChartY","location":"cchart/io.github.staakk.cchart/-chart-context/to-chart-y.html","searchKeys":["toChartY","fun toChartY(y: Float): Float","io.github.staakk.cchart.ChartContext.toChartY"]},{"name":"fun toOffset(): Offset","description":"io.github.staakk.cchart.renderer.RendererPoint.toOffset","location":"cchart/io.github.staakk.cchart.renderer/-renderer-point/to-offset.html","searchKeys":["toOffset","fun toOffset(): Offset","io.github.staakk.cchart.renderer.RendererPoint.toOffset"]},{"name":"fun toRendererHeight(height: Float): Float","description":"io.github.staakk.cchart.ChartContext.toRendererHeight","location":"cchart/io.github.staakk.cchart/-chart-context/to-renderer-height.html","searchKeys":["toRendererHeight","fun toRendererHeight(height: Float): Float","io.github.staakk.cchart.ChartContext.toRendererHeight"]},{"name":"fun toRendererWidth(width: Float): Float","description":"io.github.staakk.cchart.ChartContext.toRendererWidth","location":"cchart/io.github.staakk.cchart/-chart-context/to-renderer-width.html","searchKeys":["toRendererWidth","fun toRendererWidth(width: Float): Float","io.github.staakk.cchart.ChartContext.toRendererWidth"]},{"name":"fun toRendererX(x: Float): Float","description":"io.github.staakk.cchart.ChartContext.toRendererX","location":"cchart/io.github.staakk.cchart/-chart-context/to-renderer-x.html","searchKeys":["toRendererX","fun toRendererX(x: Float): Float","io.github.staakk.cchart.ChartContext.toRendererX"]},{"name":"fun toRendererY(y: Float): Float","description":"io.github.staakk.cchart.ChartContext.toRendererY","location":"cchart/io.github.staakk.cchart/-chart-context/to-renderer-y.html","searchKeys":["toRendererY","fun toRendererY(y: Float): Float","io.github.staakk.cchart.ChartContext.toRendererY"]},{"name":"fun valueOf(value: String): GridOrientation","description":"io.github.staakk.cchart.grid.GridOrientation.valueOf","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GridOrientation","io.github.staakk.cchart.grid.GridOrientation.valueOf"]},{"name":"fun values(): Array<GridOrientation>","description":"io.github.staakk.cchart.grid.GridOrientation.values","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/values.html","searchKeys":["values","fun values(): Array<GridOrientation>","io.github.staakk.cchart.grid.GridOrientation.values"]},{"name":"fun verticalLabels(locationPercent: Float = 0.0f, textMeasurer: TextMeasurer = rememberTextMeasurer(), labelStyle: LabelStyle = LabelStyle(\n                alignment = Alignment.CenterEnd,\n                labelOffset = with(LocalDensity.current) { Offset(-4.dp.toPx(), 0f) },\n            ), labelsProvider: LabelsProvider = IntLabelsProvider): Labels","description":"io.github.staakk.cchart.label.Labels.Companion.verticalLabels","location":"cchart/io.github.staakk.cchart.label/-labels/-companion/vertical-labels.html","searchKeys":["verticalLabels","fun verticalLabels(locationPercent: Float = 0.0f, textMeasurer: TextMeasurer = rememberTextMeasurer(), labelStyle: LabelStyle = LabelStyle(\n                alignment = Alignment.CenterEnd,\n                labelOffset = with(LocalDensity.current) { Offset(-4.dp.toPx(), 0f) },\n            ), labelsProvider: LabelsProvider = IntLabelsProvider): Labels","io.github.staakk.cchart.label.Labels.Companion.verticalLabels"]},{"name":"interface ChartScope","description":"io.github.staakk.cchart.ChartScope","location":"cchart/io.github.staakk.cchart/-chart-scope/index.html","searchKeys":["ChartScope","interface ChartScope","io.github.staakk.cchart.ChartScope"]},{"name":"interface Renderer","description":"io.github.staakk.cchart.renderer.Renderer","location":"cchart/io.github.staakk.cchart.renderer/-renderer/index.html","searchKeys":["Renderer","interface Renderer","io.github.staakk.cchart.renderer.Renderer"]},{"name":"object Companion","description":"io.github.staakk.cchart.axis.AxisOrientation.Companion","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/-companion/index.html","searchKeys":["Companion","object Companion","io.github.staakk.cchart.axis.AxisOrientation.Companion"]},{"name":"object Companion","description":"io.github.staakk.cchart.bounds.BoundsProvider.Companion","location":"cchart/io.github.staakk.cchart.bounds/-bounds-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.staakk.cchart.bounds.BoundsProvider.Companion"]},{"name":"object Companion","description":"io.github.staakk.cchart.data.Viewport.Companion","location":"cchart/io.github.staakk.cchart.data/-viewport/-companion/index.html","searchKeys":["Companion","object Companion","io.github.staakk.cchart.data.Viewport.Companion"]},{"name":"object Companion","description":"io.github.staakk.cchart.label.Labels.Companion","location":"cchart/io.github.staakk.cchart.label/-labels/-companion/index.html","searchKeys":["Companion","object Companion","io.github.staakk.cchart.label.Labels.Companion"]},{"name":"object GridLinesProviders","description":"io.github.staakk.cchart.grid.GridLinesProviders","location":"cchart/io.github.staakk.cchart.grid/-grid-lines-providers/index.html","searchKeys":["GridLinesProviders","object GridLinesProviders","io.github.staakk.cchart.grid.GridLinesProviders"]},{"name":"object Horizontal : LabelOrientation","description":"io.github.staakk.cchart.label.LabelOrientation.Horizontal","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-horizontal/index.html","searchKeys":["Horizontal","object Horizontal : LabelOrientation","io.github.staakk.cchart.label.LabelOrientation.Horizontal"]},{"name":"object IntLabelsProvider : LabelsProvider","description":"io.github.staakk.cchart.label.IntLabelsProvider","location":"cchart/io.github.staakk.cchart.label/-int-labels-provider/index.html","searchKeys":["IntLabelsProvider","object IntLabelsProvider : LabelsProvider","io.github.staakk.cchart.label.IntLabelsProvider"]},{"name":"object None : Bounds","description":"io.github.staakk.cchart.bounds.Bounds.None","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-none/index.html","searchKeys":["None","object None : Bounds","io.github.staakk.cchart.bounds.Bounds.None"]},{"name":"object Vertical : LabelOrientation","description":"io.github.staakk.cchart.label.LabelOrientation.Vertical","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-vertical/index.html","searchKeys":["Vertical","object Vertical : LabelOrientation","io.github.staakk.cchart.label.LabelOrientation.Vertical"]},{"name":"open override fun DrawScope.transformToRendererSpace(context: ChartContext, offset: Float, locationPercent: Float): Offset","description":"io.github.staakk.cchart.label.LabelOrientation.Horizontal.transformToRendererSpace","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-horizontal/transform-to-renderer-space.html","searchKeys":["transformToRendererSpace","open override fun DrawScope.transformToRendererSpace(context: ChartContext, offset: Float, locationPercent: Float): Offset","io.github.staakk.cchart.label.LabelOrientation.Horizontal.transformToRendererSpace"]},{"name":"open override fun DrawScope.transformToRendererSpace(context: ChartContext, offset: Float, locationPercent: Float): Offset","description":"io.github.staakk.cchart.label.LabelOrientation.Vertical.transformToRendererSpace","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-vertical/transform-to-renderer-space.html","searchKeys":["transformToRendererSpace","open override fun DrawScope.transformToRendererSpace(context: ChartContext, offset: Float, locationPercent: Float): Offset","io.github.staakk.cchart.label.LabelOrientation.Vertical.transformToRendererSpace"]},{"name":"open override fun RendererScope.draw()","description":"io.github.staakk.cchart.axis.Axis.draw","location":"cchart/io.github.staakk.cchart.axis/-axis/draw.html","searchKeys":["draw","open override fun RendererScope.draw()","io.github.staakk.cchart.axis.Axis.draw"]},{"name":"open override fun RendererScope.draw()","description":"io.github.staakk.cchart.grid.Grid.draw","location":"cchart/io.github.staakk.cchart.grid/-grid/draw.html","searchKeys":["draw","open override fun RendererScope.draw()","io.github.staakk.cchart.grid.Grid.draw"]},{"name":"open override fun RendererScope.draw()","description":"io.github.staakk.cchart.label.Labels.draw","location":"cchart/io.github.staakk.cchart.label/-labels/draw.html","searchKeys":["draw","open override fun RendererScope.draw()","io.github.staakk.cchart.label.Labels.draw"]},{"name":"open override fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","description":"io.github.staakk.cchart.bar.BarProcessor.draw","location":"cchart/io.github.staakk.cchart.bar/-bar-processor/draw.html","searchKeys":["draw","open override fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","io.github.staakk.cchart.bar.BarProcessor.draw"]},{"name":"open override fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","description":"io.github.staakk.cchart.line.DrawLine.draw","location":"cchart/io.github.staakk.cchart.line/-draw-line/draw.html","searchKeys":["draw","open override fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","io.github.staakk.cchart.line.DrawLine.draw"]},{"name":"open override fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","description":"io.github.staakk.cchart.point.DrawPoints.draw","location":"cchart/io.github.staakk.cchart.point/-draw-points/draw.html","searchKeys":["draw","open override fun RendererScope.draw(rendererPoints: List<RendererPoint<*>>)","io.github.staakk.cchart.point.DrawPoints.draw"]},{"name":"open override fun contains(offset: Offset): Boolean","description":"io.github.staakk.cchart.bounds.Bounds.Circle.contains","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/contains.html","searchKeys":["contains","open override fun contains(offset: Offset): Boolean","io.github.staakk.cchart.bounds.Bounds.Circle.contains"]},{"name":"open override fun contains(offset: Offset): Boolean","description":"io.github.staakk.cchart.bounds.Bounds.None.contains","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-none/contains.html","searchKeys":["contains","open override fun contains(offset: Offset): Boolean","io.github.staakk.cchart.bounds.Bounds.None.contains"]},{"name":"open override fun contains(offset: Offset): Boolean","description":"io.github.staakk.cchart.bounds.Bounds.Rect.contains","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/contains.html","searchKeys":["contains","open override fun contains(offset: Offset): Boolean","io.github.staakk.cchart.bounds.Bounds.Rect.contains"]},{"name":"open override fun getClipExtension(textMeasurer: TextMeasurer, labelOffset: Offset, style: TextStyle): Size","description":"io.github.staakk.cchart.label.LabelOrientation.Horizontal.getClipExtension","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-horizontal/get-clip-extension.html","searchKeys":["getClipExtension","open override fun getClipExtension(textMeasurer: TextMeasurer, labelOffset: Offset, style: TextStyle): Size","io.github.staakk.cchart.label.LabelOrientation.Horizontal.getClipExtension"]},{"name":"open override fun getClipExtension(textMeasurer: TextMeasurer, labelOffset: Offset, style: TextStyle): Size","description":"io.github.staakk.cchart.label.LabelOrientation.Vertical.getClipExtension","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-vertical/get-clip-extension.html","searchKeys":["getClipExtension","open override fun getClipExtension(textMeasurer: TextMeasurer, labelOffset: Offset, style: TextStyle): Size","io.github.staakk.cchart.label.LabelOrientation.Vertical.getClipExtension"]},{"name":"open override fun getEnd(drawScope: DrawScope, context: ChartContext, value: Float): Offset","description":"io.github.staakk.cchart.grid.GridOrientation.Horizontal.getEnd","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-horizontal/get-end.html","searchKeys":["getEnd","open override fun getEnd(drawScope: DrawScope, context: ChartContext, value: Float): Offset","io.github.staakk.cchart.grid.GridOrientation.Horizontal.getEnd"]},{"name":"open override fun getEnd(drawScope: DrawScope, context: ChartContext, value: Float): Offset","description":"io.github.staakk.cchart.grid.GridOrientation.Vertical.getEnd","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-vertical/get-end.html","searchKeys":["getEnd","open override fun getEnd(drawScope: DrawScope, context: ChartContext, value: Float): Offset","io.github.staakk.cchart.grid.GridOrientation.Vertical.getEnd"]},{"name":"open override fun getMax(bounds: Viewport): Float","description":"io.github.staakk.cchart.grid.GridOrientation.Horizontal.getMax","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-horizontal/get-max.html","searchKeys":["getMax","open override fun getMax(bounds: Viewport): Float","io.github.staakk.cchart.grid.GridOrientation.Horizontal.getMax"]},{"name":"open override fun getMax(bounds: Viewport): Float","description":"io.github.staakk.cchart.grid.GridOrientation.Vertical.getMax","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-vertical/get-max.html","searchKeys":["getMax","open override fun getMax(bounds: Viewport): Float","io.github.staakk.cchart.grid.GridOrientation.Vertical.getMax"]},{"name":"open override fun getMin(bounds: Viewport): Float","description":"io.github.staakk.cchart.grid.GridOrientation.Horizontal.getMin","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-horizontal/get-min.html","searchKeys":["getMin","open override fun getMin(bounds: Viewport): Float","io.github.staakk.cchart.grid.GridOrientation.Horizontal.getMin"]},{"name":"open override fun getMin(bounds: Viewport): Float","description":"io.github.staakk.cchart.grid.GridOrientation.Vertical.getMin","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-vertical/get-min.html","searchKeys":["getMin","open override fun getMin(bounds: Viewport): Float","io.github.staakk.cchart.grid.GridOrientation.Vertical.getMin"]},{"name":"open override fun getRange(viewport: Viewport): ClosedFloatingPointRange<Float>","description":"io.github.staakk.cchart.label.LabelOrientation.Horizontal.getRange","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-horizontal/get-range.html","searchKeys":["getRange","open override fun getRange(viewport: Viewport): ClosedFloatingPointRange<Float>","io.github.staakk.cchart.label.LabelOrientation.Horizontal.getRange"]},{"name":"open override fun getRange(viewport: Viewport): ClosedFloatingPointRange<Float>","description":"io.github.staakk.cchart.label.LabelOrientation.Vertical.getRange","location":"cchart/io.github.staakk.cchart.label/-label-orientation/-vertical/get-range.html","searchKeys":["getRange","open override fun getRange(viewport: Viewport): ClosedFloatingPointRange<Float>","io.github.staakk.cchart.label.LabelOrientation.Vertical.getRange"]},{"name":"open override fun getStart(drawScope: DrawScope, context: ChartContext, value: Float): Offset","description":"io.github.staakk.cchart.grid.GridOrientation.Horizontal.getStart","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-horizontal/get-start.html","searchKeys":["getStart","open override fun getStart(drawScope: DrawScope, context: ChartContext, value: Float): Offset","io.github.staakk.cchart.grid.GridOrientation.Horizontal.getStart"]},{"name":"open override fun getStart(drawScope: DrawScope, context: ChartContext, value: Float): Offset","description":"io.github.staakk.cchart.grid.GridOrientation.Vertical.getStart","location":"cchart/io.github.staakk.cchart.grid/-grid-orientation/-vertical/get-start.html","searchKeys":["getStart","open override fun getStart(drawScope: DrawScope, context: ChartContext, value: Float): Offset","io.github.staakk.cchart.grid.GridOrientation.Vertical.getStart"]},{"name":"open override fun provide(min: Float, max: Float): List<Pair<String, Float>>","description":"io.github.staakk.cchart.label.IntLabelsProvider.provide","location":"cchart/io.github.staakk.cchart.label/-int-labels-provider/provide.html","searchKeys":["provide","open override fun provide(min: Float, max: Float): List<Pair<String, Float>>","io.github.staakk.cchart.label.IntLabelsProvider.provide"]},{"name":"open override fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","description":"io.github.staakk.cchart.bar.BarProcessor.provide","location":"cchart/io.github.staakk.cchart.bar/-bar-processor/provide.html","searchKeys":["provide","open override fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","io.github.staakk.cchart.bar.BarProcessor.provide"]},{"name":"open override fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","description":"io.github.staakk.cchart.line.LineBoundsProvider.provide","location":"cchart/io.github.staakk.cchart.line/-line-bounds-provider/provide.html","searchKeys":["provide","open override fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","io.github.staakk.cchart.line.LineBoundsProvider.provide"]},{"name":"open override fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","description":"io.github.staakk.cchart.point.PointBoundsProvider.provide","location":"cchart/io.github.staakk.cchart.point/-point-bounds-provider/provide.html","searchKeys":["provide","open override fun provide(rendererPoints: List<RendererPoint<*>>): List<Bounds>","io.github.staakk.cchart.point.PointBoundsProvider.provide"]},{"name":"open override val labelAnchorX: Float","description":"io.github.staakk.cchart.bounds.Bounds.Circle.labelAnchorX","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/label-anchor-x.html","searchKeys":["labelAnchorX","open override val labelAnchorX: Float","io.github.staakk.cchart.bounds.Bounds.Circle.labelAnchorX"]},{"name":"open override val labelAnchorX: Float","description":"io.github.staakk.cchart.bounds.Bounds.Rect.labelAnchorX","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/label-anchor-x.html","searchKeys":["labelAnchorX","open override val labelAnchorX: Float","io.github.staakk.cchart.bounds.Bounds.Rect.labelAnchorX"]},{"name":"open override val labelAnchorX: Float = 0.0f","description":"io.github.staakk.cchart.bounds.Bounds.None.labelAnchorX","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-none/label-anchor-x.html","searchKeys":["labelAnchorX","open override val labelAnchorX: Float = 0.0f","io.github.staakk.cchart.bounds.Bounds.None.labelAnchorX"]},{"name":"open override val labelAnchorY: Float","description":"io.github.staakk.cchart.bounds.Bounds.Circle.labelAnchorY","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/label-anchor-y.html","searchKeys":["labelAnchorY","open override val labelAnchorY: Float","io.github.staakk.cchart.bounds.Bounds.Circle.labelAnchorY"]},{"name":"open override val labelAnchorY: Float","description":"io.github.staakk.cchart.bounds.Bounds.Rect.labelAnchorY","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/label-anchor-y.html","searchKeys":["labelAnchorY","open override val labelAnchorY: Float","io.github.staakk.cchart.bounds.Bounds.Rect.labelAnchorY"]},{"name":"open override val labelAnchorY: Float = 0.0f","description":"io.github.staakk.cchart.bounds.Bounds.None.labelAnchorY","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-none/label-anchor-y.html","searchKeys":["labelAnchorY","open override val labelAnchorY: Float = 0.0f","io.github.staakk.cchart.bounds.Bounds.None.labelAnchorY"]},{"name":"open override val point: Point<*>","description":"io.github.staakk.cchart.bounds.Bounds.Circle.point","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/point.html","searchKeys":["point","open override val point: Point<*>","io.github.staakk.cchart.bounds.Bounds.Circle.point"]},{"name":"open override val point: Point<*>","description":"io.github.staakk.cchart.bounds.Bounds.None.point","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-none/point.html","searchKeys":["point","open override val point: Point<*>","io.github.staakk.cchart.bounds.Bounds.None.point"]},{"name":"open override val point: Point<*>","description":"io.github.staakk.cchart.bounds.Bounds.Rect.point","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/point.html","searchKeys":["point","open override val point: Point<*>","io.github.staakk.cchart.bounds.Bounds.Rect.point"]},{"name":"operator fun plus(other: Viewport): Viewport","description":"io.github.staakk.cchart.data.Viewport.plus","location":"cchart/io.github.staakk.cchart.data/-viewport/plus.html","searchKeys":["plus","operator fun plus(other: Viewport): Viewport","io.github.staakk.cchart.data.Viewport.plus"]},{"name":"sealed class Bounds","description":"io.github.staakk.cchart.bounds.Bounds","location":"cchart/io.github.staakk.cchart.bounds/-bounds/index.html","searchKeys":["Bounds","sealed class Bounds","io.github.staakk.cchart.bounds.Bounds"]},{"name":"sealed class LabelOrientation","description":"io.github.staakk.cchart.label.LabelOrientation","location":"cchart/io.github.staakk.cchart.label/-label-orientation/index.html","searchKeys":["LabelOrientation","sealed class LabelOrientation","io.github.staakk.cchart.label.LabelOrientation"]},{"name":"suspend fun PointerInputScope.detectTransformGestures(onGesture: (centroid: Offset, pan: Offset, zoom: Float, direction: Offset) -> Unit)","description":"io.github.staakk.cchart.common.detectTransformGestures","location":"cchart/io.github.staakk.cchart.common/detect-transform-gestures.html","searchKeys":["detectTransformGestures","suspend fun PointerInputScope.detectTransformGestures(onGesture: (centroid: Offset, pan: Offset, zoom: Float, direction: Offset) -> Unit)","io.github.staakk.cchart.common.detectTransformGestures"]},{"name":"val Horizontal: AxisOrientation","description":"io.github.staakk.cchart.axis.AxisOrientation.Companion.Horizontal","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/-companion/-horizontal.html","searchKeys":["Horizontal","val Horizontal: AxisOrientation","io.github.staakk.cchart.axis.AxisOrientation.Companion.Horizontal"]},{"name":"val NoBounds: BoundsProvider","description":"io.github.staakk.cchart.bounds.BoundsProvider.Companion.NoBounds","location":"cchart/io.github.staakk.cchart.bounds/-bounds-provider/-companion/-no-bounds.html","searchKeys":["NoBounds","val NoBounds: BoundsProvider","io.github.staakk.cchart.bounds.BoundsProvider.Companion.NoBounds"]},{"name":"val Vertical: AxisOrientation","description":"io.github.staakk.cchart.axis.AxisOrientation.Companion.Vertical","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/-companion/-vertical.html","searchKeys":["Vertical","val Vertical: AxisOrientation","io.github.staakk.cchart.axis.AxisOrientation.Companion.Vertical"]},{"name":"val alignment: Alignment","description":"io.github.staakk.cchart.style.LabelStyle.alignment","location":"cchart/io.github.staakk.cchart.style/-label-style/alignment.html","searchKeys":["alignment","val alignment: Alignment","io.github.staakk.cchart.style.LabelStyle.alignment"]},{"name":"val alpha: Float = 1.0f","description":"io.github.staakk.cchart.style.LineStyle.alpha","location":"cchart/io.github.staakk.cchart.style/-line-style/alpha.html","searchKeys":["alpha","val alpha: Float = 1.0f","io.github.staakk.cchart.style.LineStyle.alpha"]},{"name":"val alpha: Float = 1.0f","description":"io.github.staakk.cchart.style.PrimitiveStyle.alpha","location":"cchart/io.github.staakk.cchart.style/-primitive-style/alpha.html","searchKeys":["alpha","val alpha: Float = 1.0f","io.github.staakk.cchart.style.PrimitiveStyle.alpha"]},{"name":"val blendMode: BlendMode","description":"io.github.staakk.cchart.style.LineStyle.blendMode","location":"cchart/io.github.staakk.cchart.style/-line-style/blend-mode.html","searchKeys":["blendMode","val blendMode: BlendMode","io.github.staakk.cchart.style.LineStyle.blendMode"]},{"name":"val blendMode: BlendMode","description":"io.github.staakk.cchart.style.PrimitiveStyle.blendMode","location":"cchart/io.github.staakk.cchart.style/-primitive-style/blend-mode.html","searchKeys":["blendMode","val blendMode: BlendMode","io.github.staakk.cchart.style.PrimitiveStyle.blendMode"]},{"name":"val bottomRight: Offset","description":"io.github.staakk.cchart.bounds.Bounds.Rect.bottomRight","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/bottom-right.html","searchKeys":["bottomRight","val bottomRight: Offset","io.github.staakk.cchart.bounds.Bounds.Rect.bottomRight"]},{"name":"val brush: Brush","description":"io.github.staakk.cchart.style.LabelStyle.brush","location":"cchart/io.github.staakk.cchart.style/-label-style/brush.html","searchKeys":["brush","val brush: Brush","io.github.staakk.cchart.style.LabelStyle.brush"]},{"name":"val brush: Brush","description":"io.github.staakk.cchart.style.LineStyle.brush","location":"cchart/io.github.staakk.cchart.style/-line-style/brush.html","searchKeys":["brush","val brush: Brush","io.github.staakk.cchart.style.LineStyle.brush"]},{"name":"val brush: Brush","description":"io.github.staakk.cchart.style.PrimitiveStyle.brush","location":"cchart/io.github.staakk.cchart.style/-primitive-style/brush.html","searchKeys":["brush","val brush: Brush","io.github.staakk.cchart.style.PrimitiveStyle.brush"]},{"name":"val canvasSize: Size","description":"io.github.staakk.cchart.AnchorScope.canvasSize","location":"cchart/io.github.staakk.cchart/-anchor-scope/canvas-size.html","searchKeys":["canvasSize","val canvasSize: Size","io.github.staakk.cchart.AnchorScope.canvasSize"]},{"name":"val canvasSize: Size","description":"io.github.staakk.cchart.ChartContext.canvasSize","location":"cchart/io.github.staakk.cchart/-chart-context/canvas-size.html","searchKeys":["canvasSize","val canvasSize: Size","io.github.staakk.cchart.ChartContext.canvasSize"]},{"name":"val cap: StrokeCap","description":"io.github.staakk.cchart.style.LineStyle.cap","location":"cchart/io.github.staakk.cchart.style/-line-style/cap.html","searchKeys":["cap","val cap: StrokeCap","io.github.staakk.cchart.style.LineStyle.cap"]},{"name":"val center: Offset","description":"io.github.staakk.cchart.bounds.Bounds.Circle.center","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/center.html","searchKeys":["center","val center: Offset","io.github.staakk.cchart.bounds.Bounds.Circle.center"]},{"name":"val chartContext: ChartContext","description":"io.github.staakk.cchart.renderer.RendererScope.chartContext","location":"cchart/io.github.staakk.cchart.renderer/-renderer-scope/chart-context.html","searchKeys":["chartContext","val chartContext: ChartContext","io.github.staakk.cchart.renderer.RendererScope.chartContext"]},{"name":"val clip: Boolean = false","description":"io.github.staakk.cchart.style.LabelStyle.clip","location":"cchart/io.github.staakk.cchart.style/-label-style/clip.html","searchKeys":["clip","val clip: Boolean = false","io.github.staakk.cchart.style.LabelStyle.clip"]},{"name":"val colorFilter: ColorFilter? = null","description":"io.github.staakk.cchart.style.LineStyle.colorFilter","location":"cchart/io.github.staakk.cchart.style/-line-style/color-filter.html","searchKeys":["colorFilter","val colorFilter: ColorFilter? = null","io.github.staakk.cchart.style.LineStyle.colorFilter"]},{"name":"val colorFilter: ColorFilter? = null","description":"io.github.staakk.cchart.style.PrimitiveStyle.colorFilter","location":"cchart/io.github.staakk.cchart.style/-primitive-style/color-filter.html","searchKeys":["colorFilter","val colorFilter: ColorFilter? = null","io.github.staakk.cchart.style.PrimitiveStyle.colorFilter"]},{"name":"val data: T","description":"io.github.staakk.cchart.data.Point.data","location":"cchart/io.github.staakk.cchart.data/-point/data.html","searchKeys":["data","val data: T","io.github.staakk.cchart.data.Point.data"]},{"name":"val density: Density","description":"io.github.staakk.cchart.AnchorScope.density","location":"cchart/io.github.staakk.cchart/-anchor-scope/density.html","searchKeys":["density","val density: Density","io.github.staakk.cchart.AnchorScope.density"]},{"name":"val height: Float","description":"io.github.staakk.cchart.data.Viewport.height","location":"cchart/io.github.staakk.cchart.data/-viewport/height.html","searchKeys":["height","val height: Float","io.github.staakk.cchart.data.Viewport.height"]},{"name":"val intGrid: GridProvider","description":"io.github.staakk.cchart.grid.GridLinesProviders.intGrid","location":"cchart/io.github.staakk.cchart.grid/-grid-lines-providers/int-grid.html","searchKeys":["intGrid","val intGrid: GridProvider","io.github.staakk.cchart.grid.GridLinesProviders.intGrid"]},{"name":"val isInRendererSpace: Boolean","description":"io.github.staakk.cchart.data.Point.isInRendererSpace","location":"cchart/io.github.staakk.cchart.data/-point/is-in-renderer-space.html","searchKeys":["isInRendererSpace","val isInRendererSpace: Boolean","io.github.staakk.cchart.data.Point.isInRendererSpace"]},{"name":"val labelOffset: Offset","description":"io.github.staakk.cchart.style.LabelStyle.labelOffset","location":"cchart/io.github.staakk.cchart.style/-label-style/label-offset.html","searchKeys":["labelOffset","val labelOffset: Offset","io.github.staakk.cchart.style.LabelStyle.labelOffset"]},{"name":"val maxX: Float","description":"io.github.staakk.cchart.data.Viewport.maxX","location":"cchart/io.github.staakk.cchart.data/-viewport/max-x.html","searchKeys":["maxX","val maxX: Float","io.github.staakk.cchart.data.Viewport.maxX"]},{"name":"val maxY: Float","description":"io.github.staakk.cchart.data.Viewport.maxY","location":"cchart/io.github.staakk.cchart.data/-viewport/max-y.html","searchKeys":["maxY","val maxY: Float","io.github.staakk.cchart.data.Viewport.maxY"]},{"name":"val minX: Float","description":"io.github.staakk.cchart.data.Viewport.minX","location":"cchart/io.github.staakk.cchart.data/-viewport/min-x.html","searchKeys":["minX","val minX: Float","io.github.staakk.cchart.data.Viewport.minX"]},{"name":"val minY: Float","description":"io.github.staakk.cchart.data.Viewport.minY","location":"cchart/io.github.staakk.cchart.data/-viewport/min-y.html","searchKeys":["minY","val minY: Float","io.github.staakk.cchart.data.Viewport.minY"]},{"name":"val offset: Offset","description":"io.github.staakk.cchart.AnchorScope.offset","location":"cchart/io.github.staakk.cchart/-anchor-scope/offset.html","searchKeys":["offset","val offset: Offset","io.github.staakk.cchart.AnchorScope.offset"]},{"name":"val pathEffect: PathEffect? = null","description":"io.github.staakk.cchart.style.LineStyle.pathEffect","location":"cchart/io.github.staakk.cchart.style/-line-style/path-effect.html","searchKeys":["pathEffect","val pathEffect: PathEffect? = null","io.github.staakk.cchart.style.LineStyle.pathEffect"]},{"name":"val point: Point<*>","description":"io.github.staakk.cchart.AnchorScope.point","location":"cchart/io.github.staakk.cchart/-anchor-scope/point.html","searchKeys":["point","val point: Point<*>","io.github.staakk.cchart.AnchorScope.point"]},{"name":"val point: Point<T>","description":"io.github.staakk.cchart.renderer.RendererPoint.point","location":"cchart/io.github.staakk.cchart.renderer/-renderer-point/point.html","searchKeys":["point","val point: Point<T>","io.github.staakk.cchart.renderer.RendererPoint.point"]},{"name":"val radius: Float","description":"io.github.staakk.cchart.bounds.Bounds.Circle.radius","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-circle/radius.html","searchKeys":["radius","val radius: Float","io.github.staakk.cchart.bounds.Bounds.Circle.radius"]},{"name":"val scaleX: Float","description":"io.github.staakk.cchart.ChartContext.scaleX","location":"cchart/io.github.staakk.cchart/-chart-context/scale-x.html","searchKeys":["scaleX","val scaleX: Float","io.github.staakk.cchart.ChartContext.scaleX"]},{"name":"val scaleY: Float","description":"io.github.staakk.cchart.ChartContext.scaleY","location":"cchart/io.github.staakk.cchart/-chart-context/scale-y.html","searchKeys":["scaleY","val scaleY: Float","io.github.staakk.cchart.ChartContext.scaleY"]},{"name":"val size: Size","description":"io.github.staakk.cchart.data.Viewport.size","location":"cchart/io.github.staakk.cchart.data/-viewport/size.html","searchKeys":["size","val size: Size","io.github.staakk.cchart.data.Viewport.size"]},{"name":"val strokeWidth: Float","description":"io.github.staakk.cchart.style.LineStyle.strokeWidth","location":"cchart/io.github.staakk.cchart.style/-line-style/stroke-width.html","searchKeys":["strokeWidth","val strokeWidth: Float","io.github.staakk.cchart.style.LineStyle.strokeWidth"]},{"name":"val style: DrawStyle","description":"io.github.staakk.cchart.style.PrimitiveStyle.style","location":"cchart/io.github.staakk.cchart.style/-primitive-style/style.html","searchKeys":["style","val style: DrawStyle","io.github.staakk.cchart.style.PrimitiveStyle.style"]},{"name":"val textStyle: TextStyle","description":"io.github.staakk.cchart.style.LabelStyle.textStyle","location":"cchart/io.github.staakk.cchart.style/-label-style/text-style.html","searchKeys":["textStyle","val textStyle: TextStyle","io.github.staakk.cchart.style.LabelStyle.textStyle"]},{"name":"val topLeft: Offset","description":"io.github.staakk.cchart.bounds.Bounds.Rect.topLeft","location":"cchart/io.github.staakk.cchart.bounds/-bounds/-rect/top-left.html","searchKeys":["topLeft","val topLeft: Offset","io.github.staakk.cchart.bounds.Bounds.Rect.topLeft"]},{"name":"val viewport: Viewport","description":"io.github.staakk.cchart.ChartContext.viewport","location":"cchart/io.github.staakk.cchart/-chart-context/viewport.html","searchKeys":["viewport","val viewport: Viewport","io.github.staakk.cchart.ChartContext.viewport"]},{"name":"val viewport: Viewport","description":"io.github.staakk.cchart.ChartState.viewport","location":"cchart/io.github.staakk.cchart/-chart-state/viewport.html","searchKeys":["viewport","val viewport: Viewport","io.github.staakk.cchart.ChartState.viewport"]},{"name":"val width: Float","description":"io.github.staakk.cchart.data.Viewport.width","location":"cchart/io.github.staakk.cchart.data/-viewport/width.html","searchKeys":["width","val width: Float","io.github.staakk.cchart.data.Viewport.width"]},{"name":"val x: Float","description":"io.github.staakk.cchart.axis.AxisOrientation.x","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/x.html","searchKeys":["x","val x: Float","io.github.staakk.cchart.axis.AxisOrientation.x"]},{"name":"val x: Float","description":"io.github.staakk.cchart.data.Point.x","location":"cchart/io.github.staakk.cchart.data/-point/x.html","searchKeys":["x","val x: Float","io.github.staakk.cchart.data.Point.x"]},{"name":"val x: Float","description":"io.github.staakk.cchart.renderer.RendererPoint.x","location":"cchart/io.github.staakk.cchart.renderer/-renderer-point/x.html","searchKeys":["x","val x: Float","io.github.staakk.cchart.renderer.RendererPoint.x"]},{"name":"val y: Float","description":"io.github.staakk.cchart.axis.AxisOrientation.y","location":"cchart/io.github.staakk.cchart.axis/-axis-orientation/y.html","searchKeys":["y","val y: Float","io.github.staakk.cchart.axis.AxisOrientation.y"]},{"name":"val y: Float","description":"io.github.staakk.cchart.data.Point.y","location":"cchart/io.github.staakk.cchart.data/-point/y.html","searchKeys":["y","val y: Float","io.github.staakk.cchart.data.Point.y"]},{"name":"val y: Float","description":"io.github.staakk.cchart.renderer.RendererPoint.y","location":"cchart/io.github.staakk.cchart.renderer/-renderer-point/y.html","searchKeys":["y","val y: Float","io.github.staakk.cchart.renderer.RendererPoint.y"]}]
